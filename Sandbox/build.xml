<?xml version="1.0"?>

<project name="Sandbox" basedir="." default="usage" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <property file="build.properties"/>

    <property name="src.dir" value="src"/>
	<property name="test.dir" value="test"/>
    <property name="web.dir" value="war"/>
    <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
    <property name="name" value="Sandbox"/>

	<target name="_setup" depends="_start,db-create-tables,db-load-data,_deploy,tomcat-install-app,tomcat-start-app"/>
	<target name="_start" depends="tomcat-start,tomcat-start-app,db-start"/>
	<target name="_deploy" depends="app-deploy,tomcat-reload-app"/>
	<target name="_stop" depends="tomcat-stop-app,tomcat-stop,db-stop"/>
	<target name="_unsetup" depends="app-undeploy,db-drop-tables,_stop"/>
	
	<property name="maven-ant-task-jar" value="${web.dir}/WEB-INF/lib/maven-ant-tasks-2.1.3.jar"/>
	<target name="lib-cleanup">
		<delete>
	      <fileset dir="${web.dir}/WEB-INF/lib" includes="maven--*"/>
	    </delete>
	</target>
	<target name="lib-setup" depends="lib-cleanup">
		<path id="maven-ant-tasks.classpath" path="${maven-ant-task-jar}" />
		<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
		         uri="antlib:org.apache.maven.artifact.ant"
		         classpathref="maven-ant-tasks.classpath" />
		<artifact:dependencies filesetId="dependency.fileset">
			<pom file="pom.xml"/>
		</artifact:dependencies>
		<copy todir="${web.dir}/WEB-INF/lib/__mvn" flatten="true" includeemptydirs="false">
            <fileset refid="dependency.fileset"/>
        </copy>
		<copy todir="${web.dir}/WEB-INF/lib">
			<fileset dir="${web.dir}/WEB-INF/lib/__mvn"/>
			<mapper type="regexp" from="(.*)\.(.*)" to="maven--\1.\2"/>
        </copy>
		<delete dir="${web.dir}/WEB-INF/lib/__mvn"/>
	</target>
		
    <path id="master-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
    	<!-- We need the servlet API classes: -->
        <!--  * for Tomcat 5/6 use servlet-api.jar -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
    </path>

	<path id="test-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
        <pathelement path="${test.dir}"/>
    </path>
	
    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="deploy    --> Deploy application as directory"/>
        <echo message="deploywar --> Deploy application as a WAR file"/>
        <echo message="install   --> Install application in Tomcat"/>
        <echo message="reload    --> Reload application in Tomcat"/>
        <echo message="start     --> Start Tomcat application"/>
        <echo message="stop      --> Stop Tomcat application"/>
        <echo message="list      --> List Tomcat applications"/>
        <echo message=""/>
    </target>

    <target name="app-build" depends="lib-setup" description="Compile main source tree java files">
        
    	<mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    	<copy todir="${build.dir}" preservelastmodified="true">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

	<target name="app-clean" description="Clean output directories">
        <delete>
            <fileset dir="${build.dir}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
    </target>

	<target name="app-undeploy" description="Un-Deploy application">
        <delete>
            <fileset dir="${deploy.path}/${name}">
                <include name="**/*.*"/>
            </fileset>
        </delete>
    </target>
	
    <target name="app-deploy" depends="app-build" description="Deploy application">
        <copy todir="${deploy.path}/${name}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <target name="app-deploywar" depends="app-build" description="Deploy application as a WAR file">
        <war destfile="${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>
    
<!-- ============================================================== -->
<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
<!-- ============================================================== -->

    <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="catalina-ant.jar"/>
        </fileset>
    </path>

    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

    <target name="tomcat-install-app" description="Install application in Tomcat">
        <install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/>
    </target>

    <target name="tomcat-reload-app" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="tomcat-start-app" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="tomcat-stop-app" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="tomcat-list-apps" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/>
    </target>

	<target name="tomcat-start">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	    </java>
	</target>

	<target name="tomcat-stop">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <arg line="stop"/>
	    </java>
	</target>
	
	<target name="tomcat-start-debug">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <jvmarg value="-Xdebug"/>
	        <jvmarg
	value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
	    </java>
	</target>


<!-- End Tomcat tasks -->

	
<!-- ============================================================== -->
<!-- JUnit tasks												    -->
<!-- ============================================================== -->
	<property name="test.dir" value="test"/>
	        
    <target name="tests-build" description="Compile test tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
            deprecation="false" optimize="false" failonerror="true">
            <src path="${test.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>
    
    <target name="tests-run" depends="app-build, tests-build" description="Run tests">
        <junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">
        	<classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false"/>
            
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*Tests.*"/>
                	<exclude name="**/JDBC*Tests.*"/>
                </fileset>
            </batchtest>
            
        </junit>
        
        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>
	
	<target name="tests-db-run" depends="app-build,tests-build,db-drop-tables,db-create-tables,db-load-data" description="Run db tests">
	        <junit printsummary="on"
	            fork="false"
	            haltonfailure="false"
	            failureproperty="tests.failed"
	            showoutput="true">
	            <classpath refid="test-classpath"/>
	            <formatter type="brief" usefile="false"/>
	            
	            <batchtest>
	                <fileset dir="${build.dir}">
	                    <include name="**/JDBC*Tests.*"/>
	                </fileset>
	            </batchtest>
	            
	        </junit>
	        
	        <fail if="tests.failed">
	            tests.failed=${tests.failed}
	            ***********************************************************
	            ***********************************************************
	            ****  One or more tests failed!  Check the output ...  ****
	            ***********************************************************
	            ***********************************************************
	        </fail>
	    </target>

<!-- End JUnit tasks -->	
	
	
	
<!-- ============================================================== -->
<!-- Database tasks												    -->
<!-- ============================================================== -->	
	
	<target name="db-create-tables">
        <echo message="CREATE TABLES USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
             src="db/create_tables.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

    <target name="db-drop-tables">
        <echo message="DROP TABLES USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
        	 src="db/drop_tables.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

    <target name="db-load-data">
        <echo message="LOAD DATA USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
             src="db/load_data.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

    <target name="db-print-data">
        <echo message="PRINT DATA USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
             print="true"
        	 src="db/print_data.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

    <target name="db-clear-data">
        <echo message="CLEAR DATA USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
        	 src="db/clear_data.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>

	<target name="db-start">
        <echo message="STARTUP DATABASE USING: ${db.driver} ${db.url}"/>
		<java classname="org.hsqldb.Server" fork="yes">
         <arg value="-database test"/>
		 <classpath refid="master-classpath"/>
       </java>
    </target>
	
    <target name="db-stop">
        <echo message="SHUT DOWN DATABASE USING: ${db.driver} ${db.url}"/>
        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.user}"
             password="${db.pw}"
             onerror="continue"
        	 src="db/shutdown_database.sql">  
            <classpath refid="master-classpath"/>
        </sql> 
    </target>
<!-- End Database tasks -->
	
</project>